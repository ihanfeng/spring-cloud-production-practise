<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.richterplus.common.mapper.LogMapper">
    <resultMap type="com.github.richterplus.common.entity.Log" id="log">
        <id column="log_id" property="logId"/>
        <result column="log_uuid" property="logUuid"/>
        <result column="user_id" property="userId"/>
        <result column="log_type" property="logType"/>
        <result column="object_ids" property="objectIds"/>
        <result column="message" property="message"/>
        <result column="log_date" property="logDate"/>
    </resultMap>

    <select id="count" parameterType="com.github.mybatisq.Query" resultType="java.lang.Integer">
        select count(0) <include refid="com.github.richterplus.common.mapper.QMapper.countFrom"/>
    </select>

    <select id="select" parameterType="com.github.mybatisq.Query" resultMap="log">
        select <if test="selectedColumns.size > 0"><foreach collection="selectedColumns" item="col" separator=",">${tableAlias}.`${col.name}`</foreach></if><if test="selectedColumns.size == 0">${tableAlias}.`log_id`,${tableAlias}.`log_uuid`,${tableAlias}.`user_id`,${tableAlias}.`log_type`,${tableAlias}.`object_ids`,${tableAlias}.`message`,${tableAlias}.`log_date`</if> <include refid="com.github.richterplus.common.mapper.QMapper.selectFrom"/>
    </select>

    <insert id="insert" parameterType="com.github.richterplus.common.entity.Log" useGeneratedKeys="true" keyProperty="logId">
        <trim prefix="insert `log` (" suffix=")" suffixOverrides=",">
            <if test="logId != null">`log_id`,</if>
            <if test="logUuid != null">`log_uuid`,</if>
            <if test="userId != null">`user_id`,</if>
            <if test="logType != null">`log_type`,</if>
            <if test="objectIds != null">`object_ids`,</if>
            <if test="message != null">`message`,</if>
            <if test="logDate != null">`log_date`,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="logId != null">#{logId},</if>
            <if test="logUuid != null">#{logUuid},</if>
            <if test="userId != null">#{userId},</if>
            <if test="logType != null">#{logType},</if>
            <if test="objectIds != null">#{objectIds},</if>
            <if test="message != null">#{message},</if>
            <if test="logDate != null">#{logDate},</if>
        </trim>
    </insert>

    <insert id="batchInsert" useGeneratedKeys="true">
        <foreach collection="entityList" item="item" separator=";">
            <trim prefix="insert `log` (" suffix=")" suffixOverrides=",">
                <if test="item.logId != null">`log_id`,</if>
                <if test="item.logUuid != null">`log_uuid`,</if>
                <if test="item.userId != null">`user_id`,</if>
                <if test="item.logType != null">`log_type`,</if>
                <if test="item.objectIds != null">`object_ids`,</if>
                <if test="item.message != null">`message`,</if>
                <if test="item.logDate != null">`log_date`,</if>
            </trim>
            <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="item.logId != null">#{item.logId},</if>
                <if test="item.logUuid != null">#{item.logUuid},</if>
                <if test="item.userId != null">#{item.userId},</if>
                <if test="item.logType != null">#{item.logType},</if>
                <if test="item.objectIds != null">#{item.objectIds},</if>
                <if test="item.message != null">#{item.message},</if>
                <if test="item.logDate != null">#{item.logDate},</if>
            </trim>
        </foreach>
    </insert>

    <update id="update" parameterType="com.github.richterplus.common.entity.Log">
        <trim prefix="update `log` set" suffix="where `log_id`=#{logId}" suffixOverrides=",">
            <if test="logUuid != null">`log_uuid`=#{logUuid},</if>
            <if test="userId != null">`user_id`=#{userId},</if>
            <if test="logType != null">`log_type`=#{logType},</if>
            <if test="objectIds != null">`object_ids`=#{objectIds},</if>
            <if test="message != null">`message`=#{message},</if>
            <if test="logDate != null">`log_date`=#{logDate},</if>
        </trim>
    </update>

    <update id="batchUpdate">
        <foreach collection="entityList" item="item" separator=";">
            <trim prefix="update `log` set" suffix="where `log_id`=#{item.logId}" suffixOverrides=",">
                <if test="item.logUuid != null">`log_uuid`=#{item.logUuid},</if>
                <if test="item.userId != null">`user_id`=#{item.userId},</if>
                <if test="item.logType != null">`log_type`=#{item.logType},</if>
                <if test="item.objectIds != null">`object_ids`=#{item.objectIds},</if>
                <if test="item.message != null">`message`=#{item.message},</if>
                <if test="item.logDate != null">`log_date`=#{item.logDate},</if>
            </trim>
        </foreach>
    </update>

    <update id="batchUpdateByCase">
        <trim prefix="update `log` set" suffixOverrides=",">
            <foreach collection="entityList" item="item" open="`log_uuid`=case `log_id` " close=" end," separator=" ">when #{item.logId} then #{logUuid}</foreach>
            <foreach collection="entityList" item="item" open="`user_id`=case `log_id` " close=" end," separator=" ">when #{item.logId} then #{userId}</foreach>
            <foreach collection="entityList" item="item" open="`log_type`=case `log_id` " close=" end," separator=" ">when #{item.logId} then #{logType}</foreach>
            <foreach collection="entityList" item="item" open="`object_ids`=case `log_id` " close=" end," separator=" ">when #{item.logId} then #{objectIds}</foreach>
            <foreach collection="entityList" item="item" open="`message`=case `log_id` " close=" end," separator=" ">when #{item.logId} then #{message}</foreach>
            <foreach collection="entityList" item="item" open="`log_date`=case `log_id` " close=" end," separator=" ">when #{item.logId} then #{logDate}</foreach>
        </trim>
        <foreach collection="entityList" item="item" open="where `log_id` in (" close=")" separator=",">#{item.logId}</foreach>
    </update>

    <delete id="delete">
        delete from `log` where log_id=#{logId}
    </delete>
</mapper>